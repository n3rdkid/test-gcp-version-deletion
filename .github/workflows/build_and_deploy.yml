name: Build & Deploy
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Check dependencies in cache 
        id: yarn-cache 
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Initializing dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run:  yarn install

      - name: Build the repository
        run: |
          yarn build
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_KEY }}

      - name: Deploy to App Engine
        run: gcloud app deploy app.yaml --quiet --project ${{secrets.GCP_PROJECT_ID}}

      # - name : List APP versions
      #   run: gcloud app versions list --service default 
      
      # - name : Step two
      #   run:  gcloud app versions list --service default  | sed 's/  */:/g'

      # - name : Step three
      #   run: |
      #     gcloud app versions list --service default  | sed 's/  */:/g' | cut -f 2 -d :
      

      # - name : Step four
      #   run: |
      #     gcloud app versions list --service default  | sed 's/  */:/g' | cut -f 2 -d : | tail -n +2

      # - name : Step five
      #   run: |
      #     gcloud app versions list --service default  | sed 's/  */:/g' | cut -f 2 -d : | tail -n +2 | head -n 5
      
      # - name : Step six
      #   run: |
      #     gcloud app versions list --service default  | sed 's/  */:/g' | cut -f 2 -d : | tail -n +2 | head -n 5 | tr "\n" " "
      
      # - name : Delete step
      #   run: |
      #     gcloud app versions delete --service default `gcloud app versions list --service default  | sed 's/  */:/g' | cut -f 2 -d : | tail -n +2 | head -n 5 | tr "\n" " "`
      
      # VERSION TWO
      - name : Version two  step one
        run : |
          gcloud app versions list --service="default" --format="value(version.id)"
      
      - name : Version two  step two
        run : |
          gcloud app versions list --service="default" --format="value(version.id)" --sort-by="~version.createTime"
      
      - name : Version two  step two - 1
        run : |
          gcloud app versions list --service="default" --format="value(version.id)" --sort-by="~version.createTime" | tail -n +6 
      

      - name : Version two step three DELTE
        run : |
                  gcloud app versions list --service="default" --format="value(version.id)" --sort-by="~version.createTime" | tail -n +6 | xargs -r gcloud app versions delete --service default --quiet
  
  
      # - name : Delete old versions except latest 5 
      #   run:  gcloud app versions delete --service default `gcloud app versions list --service default | sed 's/  */:/g' | cut -f 2 -d : | tail -n +2 | ghead -n -5 | tr "\n" " "`